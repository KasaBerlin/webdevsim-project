{"ast":null,"code":"import _slicedToArray from \"/home/dci-rec101/Desktop/webdevsim-project/website/blah/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dci-rec101/Desktop/webdevsim-project/website/blah/client/src/components/Comments/Input.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Input = () => {\n  const nameInput = React.createRef();\n  const commentInput = React.createRef();\n  const fileInput = React.createRef();\n\n  const _useState = useState({\n    response: [],\n    post: [],\n    responseToPost: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        call = _useState2[0],\n        setCall = _useState2[1];\n\n  useEffect(() => {\n    callApi().then(res => setCall({\n      response: res.express\n    })).catch(err => console.log(err));\n  }, []);\n\n  async function callApi() {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    console.log(body);\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  }\n\n  function addPost(name, comment, file) {\n    const newPost = {\n      name: name,\n      comment: comment,\n      date: new Date().toLocaleString(),\n      file: file,\n      showing: false\n    };\n    setCall({\n      post: newPost\n    });\n    console.log(newPost);\n  }\n\n  ;\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const name = nameInput.current.value.trim();\n    const comment = commentInput.current.value.trim();\n    const file = fileInput.current.value.trim();\n    addPost(name, comment, file); // const data = new FormData(e.target); \n    // setCall({post:data})\n\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(call.post)\n    });\n    const body = await response.text();\n    setCall({\n      responseToPost: body\n    }); // axios.post(\"/upload\", data, { \n    // }).then(res => { \n    //   console.log(res.statusText);\n    // })\n    // console.log(\"submitted\");\n    // e.currentTarget.reset();\n  }\n\n  ;\n\n  function onChangeHandler(e) {// setFile(e.target.files[0])\n    // console.log(selectedFile)\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"comment-form\",\n    encType: \"multipart/form-data\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    ref: nameInput,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"comment\"), React.createElement(\"textarea\", {\n    rows: \"2\",\n    id: \"comment\",\n    name: \"comment\",\n    ref: commentInput,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"imgUpload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"upload your website image here \", React.createElement(\"i\", {\n    className: \"fas fa-chevron-circle-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"file\",\n    id: \"ref\",\n    ref: fileInput,\n    name: \"file\",\n    accept: \"image/png, image/jpeg\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"submit\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, call.response));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/dci-rec101/Desktop/webdevsim-project/website/blah/client/src/components/Comments/Input.js"],"names":["React","useState","useEffect","axios","Input","nameInput","createRef","commentInput","fileInput","response","post","responseToPost","call","setCall","callApi","then","res","express","catch","err","console","log","fetch","body","json","status","Error","message","addPost","name","comment","file","newPost","date","Date","toLocaleString","showing","handleSubmit","e","preventDefault","current","value","trim","method","headers","JSON","stringify","text","onChangeHandler"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\n\nconst Input=()=>{\n  const nameInput=React.createRef();\n  const commentInput=React.createRef();\n  const fileInput=React.createRef(); \n  \n  const [call, setCall]=useState({\n    response:[],\n    post:[],\n    responseToPost:[]\n  })\n  \nuseEffect(()=>{\n    callApi().then(res=>setCall({response:res.express})).catch(err=> console.log(err));\n  },[])\n\nasync function callApi(){\nconst response= await fetch('/api/hello');\nconst body= await response.json();\nconsole.log(body)\nif(response.status !== 200) throw Error (body.message);\nreturn body;\n  }\n\nfunction addPost(name, comment,file){\n    const newPost = {\n      name: name,\n      comment: comment,\n      date: new Date().toLocaleString(),\n      file:file,\n      showing: false\n    }; \n    setCall({post:newPost});\n    console.log(newPost)\n  };\n  \n  async function handleSubmit(e){\n    e.preventDefault();\n    const name = nameInput.current.value.trim();\n    const comment = commentInput.current.value.trim();\n    const file = fileInput.current.value.trim();\n    addPost(name,comment,file)\n    // const data = new FormData(e.target); \n    // setCall({post:data})\n  const response=await fetch('/api/world',{\n      method:'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify( call.post ),\n    })\n    const body=await response.text();\n    \n    setCall({responseToPost:body})\n    // axios.post(\"/upload\", data, { \n    // }).then(res => { \n    //   console.log(res.statusText);\n    // })\n    // console.log(\"submitted\");\n    // e.currentTarget.reset();\n  };\n  \n  function onChangeHandler(e){\n    // setFile(e.target.files[0])\n    // console.log(selectedFile)\n  }\n  \nreturn(\n<div>\n      <form className=\"comment-form\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\n        <label>name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          ref={nameInput}\n          required\n        ></input>\n        <br/>\n        <label>comment</label>\n        <textarea rows=\"2\" id=\"comment\" name=\"comment\" ref={commentInput} required></textarea>\n        <br/>\n        <div>\n        <label htmlFor=\"imgUpload\">upload your website image here <i className=\"fas fa-chevron-circle-up\"></i></label>\n        <input type=\"file\" id=\"ref\" ref={fileInput} name=\"file\" accept=\"image/png, image/jpeg\" onChange={onChangeHandler}/>\n        </div>\n        <br/>\n        <button type=\"submit\">\n          submit\n        </button>\n        <br />\n      </form>\n<h1>{call.response}</h1>\n    </div>\n    )\n}\n \nexport default Input;"]},"metadata":{},"sourceType":"module"}