{"ast":null,"code":"import _slicedToArray from \"/home/dci-rec101/Desktop/webdevsim-project/website/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dci-rec101/Desktop/webdevsim-project/website/client/src/components/Comments/Input.js\";\nimport React, { useState, useEffect } from 'react';\nimport uuid from \"uuid/v4\"; // import axios from 'axios';\n\nconst Input = () => {\n  const nameInput = React.createRef();\n  const commentInput = React.createRef();\n  const fileInput = React.createRef();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        response = _useState2[0],\n        setResponse = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        post = _useState4[0],\n        addNewPost = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        responseToPost = _useState6[0],\n        setResponseToPost = _useState6[1];\n\n  useEffect(() => {\n    callApi().then(res => setResponse(res.body)).catch(err => console.log(err));\n  }, []);\n\n  const callApi = async () => {\n    const response = await fetch('/comments');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  function addPost(name, comment, file) {\n    const newPost = {\n      name: name,\n      comment: comment,\n      date: new Date().toLocaleString(),\n      file: file,\n      showing: false\n    };\n    post.push(newPost); // addNewPost([...post, newPost]);\n  }\n\n  ;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const name = nameInput.current.value.trim();\n    const comment = commentInput.current.value.trim();\n    const file = fileInput.current.value.trim();\n    addPost(name, comment, file);\n    const response = await fetch('/comments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post\n      })\n    });\n    const body = await response.text();\n    setResponseToPost(body); // axios.post(\"/upload\", data, { \n    // }).then(res => { \n    //   console.log(res.statusText);\n    // })\n    // console.log(\"submitted\");\n    // e.currentTarget.reset();\n  };\n\n  function onChangeHandler(e) {// setFile(e.target.files[0])\n    // console.log(selectedFile)\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"comment-form\",\n    encType: \"multipart/form-data\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    ref: nameInput,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"comment\"), React.createElement(\"textarea\", {\n    rows: \"2\",\n    id: \"comment\",\n    name: \"comment\",\n    ref: commentInput,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"imgUpload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"upload your website image here \", React.createElement(\"i\", {\n    className: \"fas fa-chevron-circle-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"file\",\n    id: \"ref\",\n    ref: fileInput,\n    name: \"file\",\n    accept: \"image/png, image/jpeg\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"submit\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, response));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/dci-rec101/Desktop/webdevsim-project/website/client/src/components/Comments/Input.js"],"names":["React","useState","useEffect","uuid","Input","nameInput","createRef","commentInput","fileInput","response","setResponse","post","addNewPost","responseToPost","setResponseToPost","callApi","then","res","body","catch","err","console","log","fetch","json","status","Error","message","addPost","name","comment","file","newPost","date","Date","toLocaleString","showing","push","handleSubmit","e","preventDefault","current","value","trim","method","headers","JSON","stringify","text","onChangeHandler"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport uuid from \"uuid/v4\";\n// import axios from 'axios';\n\nconst Input=()=>{\n  const nameInput=React.createRef();\n  const commentInput=React.createRef();\n  const fileInput=React.createRef(); \n  \n  const [response, setResponse]=useState('')\n  const [post, addNewPost]=useState([])\n  const [responseToPost, setResponseToPost]=useState([])\n  \nuseEffect(()=>{\n    callApi().then(res=>setResponse(res.body)).catch(err=> console.log(err));\n  },[])\n\nconst callApi= async () =>{\nconst response= await fetch('/comments');\nconst body= await response.json()\nif(response.status !== 200) throw Error (body.message);\nreturn body;\n  }\n\nfunction addPost(name, comment,file){\n    const newPost = {\n      name: name,\n      comment: comment,\n      date: new Date().toLocaleString(),\n      file:file,\n      showing: false\n    }; \n    post.push(newPost);\n    // addNewPost([...post, newPost]);\n  };\n  \n  const handleSubmit= async e => {\n    e.preventDefault();\n    const name = nameInput.current.value.trim();\n    const comment = commentInput.current.value.trim();\n    const file = fileInput.current.value.trim();\n    addPost(name,comment,file)\n\n    const response=await fetch('/comments',{\n      method:'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({post}),\n    })\n    const body=await response.text();\n    setResponseToPost(body)\n    // axios.post(\"/upload\", data, { \n    // }).then(res => { \n    //   console.log(res.statusText);\n    // })\n    // console.log(\"submitted\");\n    // e.currentTarget.reset();\n  };\n  \n  function onChangeHandler(e){\n    // setFile(e.target.files[0])\n    // console.log(selectedFile)\n  }\n  \nreturn(\n<div>\n      <form className=\"comment-form\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\n        <label>name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          ref={nameInput}\n          required\n        ></input>\n        <br/>\n        <label>comment</label>\n        <textarea rows=\"2\" id=\"comment\" name=\"comment\" ref={commentInput} required></textarea>\n        <br/>\n        <div>\n        <label htmlFor=\"imgUpload\">upload your website image here <i className=\"fas fa-chevron-circle-up\"></i></label>\n        <input type=\"file\" id=\"ref\" ref={fileInput} name=\"file\" accept=\"image/png, image/jpeg\" onChange={onChangeHandler}/>\n        </div>\n        <br/>\n        <button type=\"submit\">\n          submit\n        </button>\n        <br />\n      </form>\n<h1>{response}</h1>\n    </div>\n    )\n}\n \nexport default Input;"]},"metadata":{},"sourceType":"module"}