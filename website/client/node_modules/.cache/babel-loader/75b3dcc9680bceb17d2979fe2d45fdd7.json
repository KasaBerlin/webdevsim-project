{"ast":null,"code":"import _slicedToArray from \"/home/dci-rec101/Desktop/webdevsim-project/website/blah/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dci-rec101/Desktop/webdevsim-project/website/blah/client/src/components/Comments/Input.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Input = () => {\n  const _React$createRef = React.createRef(),\n        nameInput = _React$createRef.nameInput,\n        commentInput = _React$createRef.commentInput,\n        fileInput = _React$createRef.fileInput;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedFile = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState({\n    response: '',\n    post: '',\n    responseToPost: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        call = _useState4[0],\n        setCall = _useState4[1];\n\n  useEffect(() => {\n    callApi().then(res => setCall({\n      response: res.express\n    })).catch(err => console.log(err));\n  });\n\n  async function callApi() {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  } // function addPost(name, comment,file){\n  //   const post = {\n  //     name: name,\n  //     comment: comment,\n  //     date: new Date().toLocaleString(),\n  //     file:file,\n  //     showing: false\n  //   };\n  //   setFile(post);\n  // };\n\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        post: call.post\n      })\n    });\n    const body = await response.text();\n    setCall({\n      responseToPost: body\n    }); // const name = nameInput.current.value.trim();\n    // const comment = commentInput.current.value.trim();\n    // const file = fileInput.current.value.trim();\n    // addPost(name,comment,file);\n\n    const data = new FormData();\n    data.append('file', selectedFile);\n    axios.post(\"http://localhost:5000/upload\", data, {}).then(res => {\n      console.log(res.statusText);\n    });\n    console.log(\"submitted\"); // e.currentTarget.reset();\n  };\n\n  function onChangeHandler(e) {\n    setFile(e.target.files[0]);\n    console.log(selectedFile);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"comment-form\",\n    encType: \"multipart/form-data\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    ref: nameInput\n    /* call the ref with the 'ref' attribute */\n    ,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"comment\"), React.createElement(\"textarea\", {\n    rows: \"2\",\n    id: \"comment\",\n    name: \"comment\",\n    ref: commentInput,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"imgUpload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"upload your website image here \", React.createElement(\"i\", {\n    className: \"fas fa-chevron-circle-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"file\",\n    id: \"ref\",\n    ref: fileInput,\n    name: \"file\",\n    accept: \"image/png, image/jpeg\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"submit\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, call.response));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/dci-rec101/Desktop/webdevsim-project/website/blah/client/src/components/Comments/Input.js"],"names":["React","useState","useEffect","axios","Input","createRef","nameInput","commentInput","fileInput","selectedFile","setFile","response","post","responseToPost","call","setCall","callApi","then","res","express","catch","err","console","log","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","data","FormData","append","statusText","onChangeHandler","target","files"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\n\nconst Input=()=>{\n  \n  const {nameInput,commentInput,fileInput}=React.createRef(); \n  const [selectedFile, setFile] = useState(null);\n  const [call, setCall]=useState({\n    response:'',\n    post:'',\n    responseToPost:''\n  })\n  \n  useEffect(()=>{\n    callApi().then(res=>setCall({response:res.express})).catch(err=> console.log(err));\n  })\n\n async function callApi(){\nconst response= await fetch('/api/hello');\nconst body= await response.json();\nif(response.status !== 200) throw Error (body.message);\nreturn body;\n  }\n  // function addPost(name, comment,file){\n  //   const post = {\n  //     name: name,\n  //     comment: comment,\n  //     date: new Date().toLocaleString(),\n  //     file:file,\n  //     showing: false\n  //   };\n  //   setFile(post);\n  // };\n\nhandleSubmit= async e=>{\n    e.preventDefault();\n    const response=await fetch('/api/world',{\n      method:'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: call.post }),\n    })\n    const body=await response.text();\n    setCall({responseToPost:body})\n    // const name = nameInput.current.value.trim();\n    // const comment = commentInput.current.value.trim();\n    // const file = fileInput.current.value.trim();\n    // addPost(name,comment,file);\n    \n    const data = new FormData(); \n    data.append('file', selectedFile);\n    axios.post(\"http://localhost:5000/upload\", data, { \n    }).then(res => { \n      console.log(res.statusText);\n    })\n    console.log(\"submitted\");\n    // e.currentTarget.reset();\n  };\n  \n  function onChangeHandler(e){\n    setFile(e.target.files[0])\n    console.log(selectedFile)\n  }\n  \nreturn(\n<div>\n      <form className=\"comment-form\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\n        <label>name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          ref={nameInput}\n          /* call the ref with the 'ref' attribute */ required\n        ></input>\n        <br/>\n        <label>comment</label>\n        <textarea rows=\"2\" id=\"comment\" name=\"comment\" ref={commentInput} required></textarea>\n        <br/>\n        <div>\n        <label htmlFor=\"imgUpload\">upload your website image here <i className=\"fas fa-chevron-circle-up\"></i></label>\n        <input type=\"file\" id=\"ref\" ref={fileInput} name=\"file\" accept=\"image/png, image/jpeg\" onChange={onChangeHandler}/>\n        </div>\n        <br/>\n        <button type=\"submit\">\n          submit\n        </button>\n        <br />\n      </form>\n<p>{call.response}</p>\n    </div>\n    )\n}\n \nexport default Input;"]},"metadata":{},"sourceType":"module"}